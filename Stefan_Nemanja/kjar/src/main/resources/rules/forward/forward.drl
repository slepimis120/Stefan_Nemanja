import java.util.List;
import stefan.nemanja.model.models.dto.CurrentUserDTO;
import stefan.nemanja.model.models.dto.UnitDTO;
import stefan.nemanja.model.models.rules.UserTroopRule;
import stefan.nemanja.model.models.Spell;
import stefan.nemanja.model.models.Troop;
import java.util.Arrays
import stefan.nemanja.model.models.rules.ResultRules;
import stefan.nemanja.model.models.rules.TroopRule;


rule "Can user cast a spell"
agenda-group "spell-check"
when
    $result : ResultRules()
    $currentUser : CurrentUserDTO(usedSpell == false)
    $spells : List() from collect(Spell())
    $cheapestSpellPoints : Number() from accumulate (
        $spell : Spell() from $spells,
        min($spell.getCost())
    )
    eval($currentUser.getSpellPoints() > $cheapestSpellPoints.intValue())
then
    $currentUser.setCanCastSpell(true);
end

rule "Can cast spell on a vulnerable unit"
agenda-group "spell-casting"
salience 1
when
    $result : ResultRules()
    $currentUser : CurrentUserDTO()
    $enemyUserTroopRule : UserTroopRule(getIsFriendly() == false)
    $spells : Spell(cost <= $currentUser.getSpellPoints()) from collect(Spell())
    $troop : Troop(this == $enemyUserTroopRule.getStrongestTroopWithVulnerabilityList(Arrays.asList($spells)))
    eval($troop != null)
then
    $currentUser.setCanCastSpell(false);
end

rule "Can cast spell on a ranged unit"
agenda-group "spell-casting"
salience 2
when
then
end

rule "Cast spell on unit with most health"
agenda-group "spell-casting"
salience 3
when
then
end

rule "Calculate troop strength"
agenda-group "troop-strength"
when
    $result : ResultRules()
    $ourTroops : UserTroopRule(getIsFriendly() == true)
    $enemyTroops : UserTroopRule(getIsFriendly() == false)
    $ourStrength : Number() from accumulate (
        $troop : TroopRule() from $ourTroops.getTroops(),
        sum($troop.getFightValue() * $troop.getTroopCount())
    )
    $enemyStrength : Number() from accumulate (
        $troop : TroopRule() from $enemyTroops.getTroops(),
        sum($troop.getFightValue() * $troop.getTroopCount())
    )
then
    double percentageDifference = ($ourStrength.doubleValue() / $enemyStrength.doubleValue() - 1) * 100;
    String strongerSide = $ourStrength.doubleValue() > $enemyStrength.doubleValue() ? "USER's" : "ENEMY's";
    $result.setResult("Fight value of user: " + $ourStrength + ". Fight value of enemy: " + $enemyStrength + ". The stronger side is " + strongerSide + " by " + Math.round(Math.abs(percentageDifference)) + "%");
end